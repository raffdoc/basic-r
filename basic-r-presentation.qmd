---
title: "Introduction to Basic R"
author: 'Rafik Margaryan, MD, PhD'
date: 17-03-2025
institute: Ospedale Del Cuore Fondazione Monasterio
format: revealjs
execute:
  eval: true
  echo: true
  warning: false
  output: true
  include: true
transition: fade
show-slide-number: all
---


# Concepts
## Phylosophy

![](/images/Rlogo.png){fig-align="center"}

- Give a man a fish, and you feed him for a day. Teach a man to fish, and you feed him for a lifetime. - Maimonides
- 授人以鱼，可以养活他一天。授人以渔，可以养活他一生。

::: aside
All software is open-source and free.
:::

::: {.notes}
Translate it to chinese: 
:::

## What is R?
- R is a free software environment for statistical computing and graphics. It compiles and runs on a wide variety of UNIX platforms, Windows and MacOS.
- The R programming language was created by Ross Ihaka and Robert Gentleman at the University of Auckland, New Zealand. 

![](images/rgrh.jpeg){fig-align="right"}


::: aside
All software is open-source and free.
:::


## Software Components

- R
- RStudio
- Prosit (VS Code)
- On line services (free)
- R packages

::: aside
All software is open-source and free tu use and to change.
:::

# Programming Language Stracture
## R code syntax

```{.r code-line-numbers="6-8"}
print("Hello, World!")
library(ggplt2)

df <- cars()
```

::: aside
Some code is borrowed from cs50 R https://cs50.harvard.edu/r/2024/
:::

## R object types

- numeric
- character
- vector 
- factor
- matrix 
- array
- list
- data frame

## Numeric 



```{.r code-line-numbers="6-8"}
x <- 5
class(x)
is.numeric(x)
```

## Character 

```{.r code-line-numbers="6-8"}
car <- "elevated blood pressure"
class(car)

```

## Numeric Vector 

```{.r code-line-numbers="6-8"}
v <- c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
class(v)

```

![](images/Vectors-in-R.jpg){fig-align="right"} 


## Character Vector

```{.r code-line-numbers="6-8"}
car_v <- c("elevated", "blood", "pressure")
class(car_v)

```

## Factors Unordered


```{.r code-line-numbers="6-8"}
f <- factor(c("underweight", "underweight", "normal", "overweight", "normal"))
levels(f)

```


## Factor Ordered by level 

```{.r code-line-numbers="6-8"}
# Enter ORIGINAL values in levels
# Enter the NEW level labels in labels
# Make sure the orderings of levels and labels correspond


y <- factor(c("underweight", "underweight", "normal", "overweight", "normal"),
            levels = c("underweight", "normal", "overweight"),
            labels = c("Underweight", "Normal", "Overweight"))
levels(y)
```


## Matrix

```{.r code-line-numbers="6-8"}
mat <- matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)
mat 

```

## Lists

 
```{.r}
x <- list("5", c(1,2,3), y) # I put y, an object we created earlier, in this list
x
```

- hold different types
- different lengths 

## DataFrames

```{.r}
x <- data.frame(outcome = c(1,0,1,1),
                exposure = c("yes", "yes", "no", "no"),
                age = c(24, 55, 39, 18))
x
```

- hold different types
- but same length
- columns have names
- row have indices
![](images/dataframe.png)

